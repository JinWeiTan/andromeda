name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Set up Rust toolchain version
        run: |
          if [ ! -f rust-toolchain.toml ]; then
            echo "Error: rust-toolchain.toml file not found!" >&2
            exit 1
          fi
          TOOLCHAIN_VERSION=$(grep 'channel' rust-toolchain.toml | cut -d '"' -f2)
          echo "TOOLCHAIN_VERSION=${TOOLCHAIN_VERSION}" >> $GITHUB_ENV
      - name: Install Rust toolchain
        run: |
          rustup set profile minimal
          rustup install "$TOOLCHAIN_VERSION"
          rustup default "$TOOLCHAIN_VERSION"
          rustup component add rustfmt clippy llvm-tools-preview rustc-dev
          rustup show
      - name: Test
        run: cargo test
        timeout-minutes: 20
      - name: Spell check
        uses: crate-ci/typos@master
      - name: Check formatting
        run: cargo fmt --check
      - name: Clippy
        run: |
          cargo clippy --all-targets -- -D warnings
          cargo +$TOOLCHAIN_VERSION clippy --all-targets --all-features -- -D warnings
